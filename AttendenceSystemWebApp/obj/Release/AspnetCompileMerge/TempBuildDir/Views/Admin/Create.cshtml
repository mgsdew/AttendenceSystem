@model AttendenceSystemWebApp.Models.AttndRegDet

@{
    ViewBag.Title = "AddAttendance";
    //Model.CreatedDate = "";
    //Layout = null;

}

<style>
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div style="background-color:black;padding-left: ; border: 0pt whitesmoke groove; border-radius: 5pt; margin-bottom:3% ;">
        <button type="button" class="btn btn-lg btn-block" style="margin-top: 3%; margin-bottom: 3%;background-color:darkslategrey;color:azure;font-weight:bold" >Employee Attendance</button>
        <div class="row" align="">
            <div class="col-md-6" style="padding-left:25px">
                @*<div class="container align-content-center col-md-4" style="">*@
                @*<hr class="bg-white" />*@
                <div class="form-group">
                    @Html.LabelFor(model => model.EmpCod, htmlAttributes: new { @class = "col-md-6", @style = "font-size:large;font-weight:bold;color:Azure;" })

                   
                    @Html.DropDownListFor(x => x.EmpCod, new SelectList(ViewBag.Employee, "UserName", "UserName"), "--Select Employee--", new { @class = "form-control col-md-6", @style = "font-size:larger;font-weight:bold;color:black;background-color: white;" })
                    @Html.ValidationMessageFor(model => model.EmpCod, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.Label("Employee Name", htmlAttributes: new { @style = "font-size:large;font-weight:bold;color:Azure;" })
                    @Html.Editor("EmpName", new { htmlAttributes = new { @class = "form-control col-md-6", @style = "font-size:large;font-weight:;color:Black;background-color: white;", @readonly = "readonly" } })

                </div>
                <div class="form-group">
                    @Html.Label("Email", htmlAttributes: new { @style = "font-size:large;font-weight:bold;color:Azure;" })
                    @Html.Editor("Email", new { htmlAttributes = new { @class = "form-control col-md-6", @style = "font-size:large;font-weight:;color:Black;background-color: white;", @readonly = "readonly" } })
                    @*@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.CheckStatus, new { @style = "font-size:large;font-weight:bold;color:black;" })<br />

                    <label class="btn btn-dark">
                        @Html.RadioButtonFor(m => m.CheckStatus, "Check In") Check In
                    </label>
                    <label class="btn btn-dark">
                        @Html.RadioButtonFor(m => m.CheckStatus, "Check Out") Check Out
                    </label>
                    @Html.ValidationMessageFor(model => model.CheckStatus, "", new { @class = "text-danger" })
                </div>
                @*<hr class="bg-white" />*@
                @*<input class="btn btn-success" type="submit" id="" value="submit" />*@


            </div>
            <div class="col-md-6" style="padding-left:25px">
                @*<hr class="bg-white" />*@

                <div class="form-group">
                    @Html.Label("Designation", htmlAttributes: new { @style = "font-size:large;font-weight:bold;color:Azure;" })
                    @Html.Editor("Designation", new { htmlAttributes = new { @class = "form-control", @style = "font-size:large;font-weight:;color:Black;background-color: white;", @readonly = "readonly" } })

                </div>
                <div class="form-group">
                    <p id="demo" style="font-weight:bold;color:orange"></p>
                    <input id="Latitude" name="Latitude" type="hidden" />
                    <input id="Longitude" name="Longitude" type="hidden" />
                    <input id="ImageUrl" name="ImageUrl" type="hidden" />
                </div>
                @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @style = "font-size:large;font-weight:bold;color:Azure;" })
            @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local", @style = "font-size:large;font-weight:;color:Black;background-color: white;" } })

            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
        </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.EntryTime, htmlAttributes: new { @style = "font-size:large;font-weight:bold;color:Azure;" })
                @*@Html.EditorFor(model => model.EntryTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local", @style = "font-size:large;font-weight:;color:Black;background-color: white;" } })*@
                @Html.TextBoxFor(x => x.EntryTime, "{0:yyyy-MM-ddTHH:mm:ss}", new
                  {
                      @class = "form-control",
                      required = "required",
                      @type = "datetime-local"
                  })
                @Html.ValidationMessageFor(model => model.EntryTime, "", new { @class = "text-danger" })
            </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @style = "font-size:large;font-weight:bold;color:Azure;" })
                    @*@Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local", @style = "font-size:large;font-weight:;color:Black;background-color: white;" } })*@
                    @Html.TextBoxFor(x => x.EndTime, "{0:yyyy-MM-ddTHH:mm:ss}", new
                      {
                          @class = "form-control",                          
                          @type = "datetime-local"
                      })

                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @style = "font-size:large;font-weight:bold;color:Azure;" })
                    @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control", @style = "font-size:large;font-weight:;color:Black;background-color: white;" } })
                    
                    @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                </div>
                <input class="btn btn-success" type="submit" value="submit" />
                <div class="form-group">
                    @if (ViewBag.Message != null)
                    {
                        <h1 class="text-success" style="font-weight: bold;font-size: large">@ViewBag.Message</h1>
                        @*<script>
                    window.onload = function () {
                        window.confirm("@ViewBag.Message");
                    };
                    if (confirm('Your attendance has been successfully recorded.')) {
                        window.location.href = "/Admin/Create";

                    }
                    if (confirm('Sorry! This Employee Have already Checked Out..')) {
                        window.location.href = "/Admin/Create";

                    }
                    if (confirm('Sorry! This Employee Have already Checked In..')) {
                        window.location.href = "/Admin/Create";

                    }
                    if (confirm('Sorry! This Employee has already Checked In and Checked Out,please try from next working day')) {
                        window.location.href = "/Admin/Create";

                    }
                </script>*@
                    }
                </div>


            </div>
        </div>






    </div>
}


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" />
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js">
</script>
<script src="~/Scripts/webcamjs-master/webcam.js"></script>
@*<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@
@*<script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>*@


@*<link href="~/Content/jquery.datetimepicker.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.datetimepicker.js"></script>*@


@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>*@
@*<script src="https://cdn.jsdelivr.net/momentjs/2.14.1/moment.min.js"></script>*@
@*<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>*@
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js"></script>*@
@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/css/bootstrap-datetimepicker.min.css">*@
@*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">*@

<script type="text/javascript">
    //jQuery('#CreatedDate').datetimepicker();

    

    $(function () {
        $("#EmpCod").select2();
    });
    $(function () {
        //$("#CreatedDate").datepicker();

        //$("CreatedDate").datetimepicker({ format: 'yyyy-mm-dd hh:ii' });

    });
    $(document).ready(function () {
        $('#EntryTime').timepicker({});
    });


</script>
<script type="text/javascript">

    //$(document).ready(function () {
    //    $('.EmpCod').select2();
    //});
      $(function () {
          var x = document.getElementById("Latitude");
          var y = document.getElementById("Longitude");
          var longitude;
          var latitude;
          if (navigator.geolocation) {
              navigator.geolocation.getCurrentPosition(showPosition);
          } else {
              x.innerHTML = "Geolocation is not supported by this browser.";
          }
          function showPosition(position) {
              latitude = position.coords.latitude;
              longitude = position.coords.longitude;
              x.value = latitude;
              y.value = longitude;
          }
    });

    $(document).ready(function() {
        $("#EmpCod").change(function() {
            var empCod = $("#EmpCod").val();
            //$("#ProductCompanyId").empty();
            var json = { id: empCod };
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetEmployeeByCode", "Admin")',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(json),
                success: function(data) {
                    var name = data.EmpName;
                    var empCode = data.EmpCod;
                    var email = data.Mail;
                    var desg = data.Designation;
                    var checkSt = data.CheckStatus;

                    $("#EmpName").val(name);
                    //if (EmpCod == null) {
                    //    $("#EmpName").val(empCode);
                    //}
                    $("#Email").val(email);
                    $("#Designation").val(desg);
                    $("#CheckStatus").val(checkSt);

                }
            });
});
    });
</script>
