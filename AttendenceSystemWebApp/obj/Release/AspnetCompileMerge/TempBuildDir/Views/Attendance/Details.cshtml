@model AttendenceSystemWebApp.Models.AttndRegDet

@{
    ViewBag.Title = "Details";
}
<style>
    label{
        font-weight: bold;
        color : darkcyan
    }
</style>
<button type="button" class="btn btn-lg btn-block" style="margin-top: 3%; margin-bottom: 3%;background-color:darkslategrey;color:azure;font-weight:bold" >Employee Details</button>

<div class="row">
    <hr />
    <div class="col-md-12">
        @if (Model.CheckStatus == "Check In")
        {
            <img class="img-thumbnail" style="height:100px;width:100px" src="~/Content/Images/@Model.CheckInImageUrl" />
        }
        else
        {
            <img class="img-thumbnail" style="height:100px;width:100px" src="~/Content/Images/@Model.CheckOutImageUrl" />
        }
    </div>
    <div class="col-md-4">
        @*<div class="form-group">*@
        @*@Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-10" })*@
        @*<div class="col-md-10">
            @Html.DisplayFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>*@
        @*</div>*@
    </div>
    <div class="col-md-4">

        @Html.LabelFor(model => model.EmpCod, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.EmpCod, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="col-md-4">
        @Html.LabelFor(model => model.EntryTime, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.EntryTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EntryTime, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-4">
            @Html.LabelFor(model => model.EntryTime, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.EntryTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EntryTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-10" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>
    <div class="col-md-4">

        @Html.LabelFor(model => model.LateTime, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.LateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LateTime, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="col-md-4">

        @Html.LabelFor(model => model.CheckStatus, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.CheckStatus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CheckStatus, "", new { @class = "text-danger" })
        </div>

    </div>
    @*<div class="col-md-4">

        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
        </div>

    </div>*@
    <div class="col-md-4">

        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="col-md-4">

        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
        </div>

    </div>
    @*<div class="col-md-4">

        @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
        </div>

    </div>*@
    <div class="col-md-4">

        @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
        </div>

    </div>
    <div class="col-md-4">

        @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
        </div>

    </div>
    <div class="col-md-4">

        @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-10" })
        <div class="col-md-10">
            @Html.DisplayFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })*@
        </div>

    </div>
</div>







    @*<dl class="dl-horizontal">
        <dd>
            @if (Model.CheckStatus == "Check In")
            {
                <img class="img-thumbnail" style="height:100px;width:100px" src="~/Content/Images/@Model.CheckInImageUrl" />
            }
            else
            {
                <img class="img-thumbnail" style="height:100px;width:100px" src="~/Content/Images/@Model.CheckOutImageUrl" />
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EmpCod)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EmpCod)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EntryTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EntryTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LateTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LateTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CheckStatus)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CheckStatus)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.LateStart)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LateStart)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EarlyOut)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EarlyOut)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Remarks)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Remarks)
        </dd>

        <dt>
            Image
        </dt>



        <dt>
            @Html.DisplayNameFor(model => model.Latitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Latitude)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Longitude)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Longitude)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UpdatedBy)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UpdatedBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UpdatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UpdatedDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>

    </dl>*@
@*</div>*@
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
