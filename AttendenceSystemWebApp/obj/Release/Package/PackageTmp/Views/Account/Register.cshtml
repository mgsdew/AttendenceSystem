@model AttendenceSystemWebApp.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";

}
<link href="~/Content/register.css" rel="stylesheet" />


<div class="register">
    <div class="row">
        <div class="col-md-12">
            <p class="lbl-login animated tada" style="font-family: Monoton;">Register Employee</p>
            @using (Html.BeginForm())
            {
                if (ViewBag.Message != null)
                {

                    <script>
                            window.onload = function () {
                                window.confirm("@ViewBag.Message");
                            };

                    </script>
                }
                @Html.AntiForgeryToken()

                <hr />
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                <p style="justify-content: center;">
                    @Html.ValidationSummary("", new { @class = "cerror" })
                </p>

                <div class="row" style="color:black;font-weight:bold">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">


                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-md-4">


                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>

                    <div class="col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-md-4">


                        <div class="form-group">
                            @Html.LabelFor(model => model.Father, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Father, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Father, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-md-4">


                        <div class="form-group">
                            @Html.LabelFor(model => model.Mother, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Mother, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mother, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-md-4">



                        <div class="form-group">
                            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DesignationId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(x => x.DesignationId,
                                new SelectList(ViewBag.Designations, "DesgId", "Desg"), "--Designation--",new { @class = "form-control", @style = "font-size:large;font-weight:;color:black;background-color: white;" })
                            </div>
                        </div>



                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.EntityId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(x => x.EntityId,
                                new SelectList(ViewBag.Entity, "EID", "eName"), "--Entity--",new { @class = "form-control", @style = "font-size:large;font-weight:;color:black;background-color: white;" })
                            </div>
                        </div>



                    </div>

                    <div class="col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.PresentAdd, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PresentAdd, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PresentAdd, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ParmanentAdd, htmlAttributes: new { @class = "control-label col-md-12" })

                            <div class="col-md-12">

                                @Html.EditorFor(model => model.ParmanentAdd, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParmanentAdd, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>

                    <div class="col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                <select class="form-control" id="Sex" name="Sex" style="font-size:large;font-weight:;color:black;background-color: white;">
                                    <option value="">--Sex--</option>
                                    <option value="Male">Male</option>
                                    <option value="FeMale">Female</option>
                                </select>


                                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DeptId, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">

                                @Html.DropDownListFor(x => x.DeptId,
                                new SelectList(ViewBag.Departments, "DeptId", "DeptNm"), "--Department--",new { @class = "form-control", @style = "font-size:large;font-weight:;color:black;background-color: white;" })
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmgContactPerson, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmgContactPerson, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmgContactPerson, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmgContactNo, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.EmgContactNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EmgContactNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NID, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">

                        <div class="form-group">
                            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BloodGr, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-10">

                                @*@Html.ValidationMessageFor(model => model.BloodGr, "", new { @class = "text-danger" })*@
                                <select class="form-control" id="BloodGr" name="BloodGr" style="font-size:large;font-weight:;color:black;background-color: white;">
                                    <option value="">--Blood Group--</option>
                                    <option value="A(+)">A(+)</option>
                                    <option value="A(-)">A(-)</option>
                                    <option value="B(+)">B(+)</option>
                                    <option value="B(-)">B(-)</option>
                                    <option value="AB(+)">AB(+)</option>
                                    <option value="AB(-)">AB(-)</option>
                                    <option value="O(+)">O(+)</option>
                                    <option value="O(-)">O(-)</option>
                                </select>
                            </div>
                        </div>

                    </div>
                </div>

                @*</div>*@




                <div class="col-md-12">

                    <div align="center" class="">
                        <input type="submit" value="Register" class="btn animate-btn btn-block" style=" margin: 10px 0; background-color: green; color: white; font-weight: 700; border-radius: 10px; height: 39px;" />
                    </div>

                </div>
                @*</div>*@
            }




        </div>
    </div>
</div>

<script>

</script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" />
@*<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>*@
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js">
</script>
<script type="text/javascript">
    //$(function () {
    var x = document.getElementById("Latitude");
    var y = document.getElementById("Longitude");
    var longitude;
    var latitude;
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
    } else {
        x.innerHTML = "Geolocation is not supported by this browser.";
    }
    function showPosition(position) {
        latitude = position.coords.latitude;
        longitude = position.coords.longitude;
        x.value = latitude;
        y.value = longitude;
    }
    //});
</script>

<script type="text/javascript">

    $(function () {
        $("#EntityId").select2();
    });
    $(function () {
        $("#DOB").datepicker();

    });
    $(function () {
        $("#DesignationId").select2();
    });
    $(function () {
        $("#DeptId").select2();
    });

</script>




@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
